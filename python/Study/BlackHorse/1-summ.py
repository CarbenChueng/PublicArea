#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Apr 24 15:23:30 2020

@author: kabun
"""

# 如果语句太长，可以加括号然后换行 也可以在换行前加\
# 类的状态：成员变量
# 类的方法：成员方法

#TODO:恒大空间和道加瓦河肯德基啊好玩的
# print(11//4)    #除法
# print(11/4)     #整除
# print(2**3)     #2的3次方
#=================================普通运算

# input 默认是str，int可以转float但是float不能转int
# pi = 3.14
# r = 10
# name = "李小龙"
# s = str(pi * r**2)
# print(type(s))
# print("这个圆的面积是:%d  名字是:%s，身高是：%.2f"%(r,name,pi))#注意不要加，号,
#要控制小数点，必须在百分号后面加.  例如%.4f表示保留小数点后四位，多出的会用0补全
#以此类推 %10d如果数字比

# ss = 231
# print("ykankaan  %.6d，%.2d  这成恨100%%好"%(ss,ss))#后面的不会减少位数

#==================================字符串对比
#1<2<3..... 100< A<B<C..Z<a<b<c,,,,,,
#字符串比较规则
# 1:相对应位置注意比较
# 2:排序大的字符串值就大
# 3:位数相等，比较末尾字母
# 4:同内容下，位数多的字符串值大
# st1 = "2"
# st2 = "30"
# st3 = "A"
# print(st1 < st2<st3)

#==================================关系运算
# 口诀：
# 1:某个操作数可以决定整个式子的值，最重结果即为该操作数
# 2：两个操作数都无法单独决定式子的值，最终结果即为后面的操作数
# print(1 and True)  #True
# print(0 and True)  #0
# print(0 or False)   #false
# print(2 or False)   #2


#and or not == c++的  && ||  !
# lsd = True     or运算里面，你要有一个是true就返回true。例子：1 or 0.返回1
# print(not lsd)#可以用not改变
# print(not lsd and False)//负负不能得正

#!/usr/bin/env python3
# -*- coding: utf-8 -*-



# =============================================================================
# for i in range(1, 5):
#     for l in range(1, 5):
#         for m in range(1, 5):
#             if i!=l and i!=m and l!=m:
#                 print(i,l,m)
#                 
# if 3==2 or True:
#     print("李小龙")
# =============================================================================
    
# =============================================================================
# num= 1002
# if 1000>num > 99  and num % 2==0:
#     print("是百位偶数")
# else:
#     print("啥都不是")
# =============================================================================

# 浮点数
# =============================================================================
# vip = input("是否会员")
# num = float(input("价格是多少"))
# 
# 
# if num >= 100:
#     num -= 50
#         
# elif num >= 50:
#     num-=20
#     
# elif num >= 30:
#     num-=10
#     
# if vip == \
#     "是":#上面是换行处理
#     num*=0.8
#     print("最终价格是：%.2f"%num)
# else:
#     print("最终价格是：%.2f"%num)
#         
# =============================================================================

# 乘法表
# =============================================================================
# i = 1
# 
# while i< 10:
#     
#     l = 1
#     while l<=i:
#         print(l ," * ", i ,"=", i*l , end ="\t")
#        
#         l+=1
#     
#     print()
#     i+=1 
#     if i == 6:
#         break
# =============================================================================
# 回文数
# =============================================================================
# i = 100
# sum = 0
# while i <= 999:
#     if i//100 == i%10:
#         print(i,end = ",")
#     i+=1
# =============================================================================

# 全局变量
# =============================================================================
# def Summ(a):
#     global x
#     x = 10
#     print(x)
#  
# x = 20
# Summ(106)
# print(x)
# =============================================================================
   
# # 返回值函数 
# =============================================================================
# def add(a,b):   
#     return a+b
# 
# def div(c,d):
#     return c//d,3
#     # return 3
# def getr(a,b):
#     A = add(a,b)
#     D,g= div(a,b)
#     return A,D,g
#     
# w,e,h= getr(200,50)
# print(w,e,h)
# =============================================================================

  #求最大值  
# =============================================================================
# def two(a,b):
#     if a > b:
#         return a
#     
#     else:
#         return b 
#     
# def three(a,b,c):
#     x = two(a, b)
#     y = two(x, c)
#     return y
#     
# m = three(8,3,6)
# print(m)
#   
# =============================================================================

#=============================================================================
# class matrix:
#     def __init__(self,data):
#         self.data = data
#
#     def __add__(self,other):
#         arow = len(self.data)
#         acol = len(self.data[0])
#
#         brow = len(other.data)
#         bcol = len(other.data[0])
#
#         if arow != brow and acol != bcol:
#             return "形状不同"
#         for row in range(arow):
#             for col in range(acol):
#                 self.data[row][col] += other.data[row][col]
#
#         return self
#     def __str__(self):
#         return str(self.data)
#
# a = matrix([[1,2,3],[4,5,6]])
# b = matrix([[11,12,13],[14,15,16]])
#
# print(a+b)
#=============================================================================


# a = [1,2,3,4,5,6]
# b = []
#
#
# for i,r in enumerate(a):
#   print(i ,"ka", r,a)
#
#
#
# for i in a:
#     b.append(a*2)
# print(b)
#
#
#
# bic = [c*2 for c in a]
# print(bic)















